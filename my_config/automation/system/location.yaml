# # # ##################################
# # # System - Vova GPS Delta
# # # ##################################
# #   - alias: system_gps_vova_delta
# #     id: system_gps_vova_delta
# #     initial_state: true
# #     trigger:
# #       - platform: state
# #         entity_id: device_tracker.life360_vova_tsymbal
# #         to: ~
# #     condition:
# #       - condition: template
# #         value_template: "{{states('person.vova') not in ['home','Home','Dima Parents','Sasha Parents','Dacha']}}"
# #     action:
# #       - service: input_number.set_value
# #         data:
# #           entity_id: input_number.vova_gps_delta
# #           value: "{{ ((as_timestamp(trigger.to_state.attributes.last_seen)|int(0) - as_timestamp(trigger.from_state.attributes.last_seen)|int(0))/60)|round(2, 'common') }}"
  
# # # ##################################
# # # Location - Vova GPS Delta notify
# # # ##################################
# #   - alias: location_system_gps_vova_delta_notify
# #     id: location_system_gps_vova_delta_notify
# #     initial_state: true
# #     trigger:
# #       - platform: numeric_state
# #         entity_id: sensor.vova_gps_delta
# #         above: 30
# #     action:
# #       - service: notify.telegram
# #         data:
# #           message: "\U0001f910 Внимание! Нет данных от Vova_GPS более 30 минут!"
  
# # # ##################################
# # # Location - life360 Overdue update
# # # ##################################
# #   - alias: location_life360_overdue_update
# #     id: location_life360_overdue_update
# #     initial_state: true
# #     trigger:
# #       - platform: event
# #         event_type: life360_update_overdue
# #     action:
# #       - service: notify.telegram
# #         data:
# #           title: Life360 update overdue
# #           message: "\U0001f910 Внимание! Задержка апдейта {{state_attr(trigger.event.data.entity_id, 'friendly_name') or trigger.event.data.entity_id}}"
  
# # # ##################################
# # # Location - life360 Overdue update
# # # ##################################
# #   - alias: location_life360_update_restored
# #     id: location_life360_update_restored
# #     initial_state: true
# #     trigger:
# #       - platform: event
# #         event_type: life360_update_restored
# #     action:
# #       - service: notify.telegram
# #         data:
# #           title: Life360 update restored
# #           message: "\U0001f910 Внимание! Апдейт получен для {{state_attr(trigger.event.data.entity_id, 'friendly_name') or trigger.event.data.entity_id}} спустя {{ trigger.event.data.wait }}."

# #  ##################################
# #  System - Location changing
# #  ##################################
#   - alias: system_location_notify
#     id: system_location_notify
#     initial_state: true
#     mode: queued
#     max: 10
#     max_exceeded: silent
#     trigger:
#       - platform: state
#         entity_id: person.sandra, person.vova, person.sasha
#         to:
#     condition:
#       - condition: template
#         value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
#     action:
#       - service: notify.telegram
#         data:
#           message: >- 
#             {%- set from = trigger.from_state.state |replace('_',' ') | title %}
#             {%- set to = trigger.to_state.state |replace('_',' ') | title %}
#             {%- set person = trigger.to_state.attributes.friendly_name %}
#             {%- if from == 'Not Home' %}
#               {%- set event = 'прибыл' %}
#             {%- elif to == 'Not Home' %}
#               {%- set event = 'покинул' %}
#             {%- else %}
#               {%- set event = 'переместился' %}
#             {%- endif %}
#             {%- if from == "Not Home" %}
#             {{'\U0001f30d'}} {{ person + ' ' + event + ' в ' + to }}
#             {%- elif to == "Not Home" %}
#             {{'\U0001f30d'}} {{ person + ' ' + event + ' ' + from }}
#             {%- else %}
#             {{'\U0001f30d'}} {{ person + ' ' + event + ' из ' + from + ' в ' + to }}
#             {%- endif %}

# #  ##################################
# #  System - Person Came\Left Home
# #  ##################################
#   - alias: system_person_came_left_home
#     id: system_person_came_left_home
#     mode: parallel
#     max: 10
#     max_exceeded: silent
#     trigger:
#       - platform: state
#         entity_id:
#           - person.dima
#           - person.sandra
#           - person.sasha
#           - person.vova
#         to:
#     condition:
#       - condition: state
#         entity_id: input_boolean.ha_shutdown
#         state: 'off'
#         for:
#           seconds: 15
#       # - condition: template
#       #   value_template: >
#       #     {% set ignore = ['unknown', 'unavailable', 'none','0'] %}
#       #     {{ trigger.event.data.old_state.state not in ignore and
#       #       trigger.event.data.new_state.state not in ignore and
#       #       trigger.event.data.new_state.state != trigger.event.data.old_state.state }}
#       - condition: template
#         value_template: >
#           {% set ignore = ['unknown', 'unavailable', 'none'] %}
#           {{ trigger.from_state.state not in ignore and
#             trigger.to_state.state not in ignore and
#             trigger.to_state.state != trigger.from_state.state }}            
#     action:
#       #- service: notify.telegram
#       #  data:
#       #      message: "{{ trigger.event.data.old_state.state }} -> {{ trigger.event.data.new_state.state }}"
#       - choose:
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.to_state.state == 'home' and trigger.from_state.state != 'home' }}"
#             sequence:
#               - event: person_came_home
#               - service: logbook.log
#                 data:
#                   name: Person Came Home
#                   message: " - {{ trigger.entity_id }}"
#                   entity_id: '{{ trigger.entity_id }}'
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.to_state.state != 'home' and trigger.from_state.state == 'home' }}"
#             sequence:
#               - event: person_left_home
#               - service: logbook.log
#                 data:
#                   name: Person Left Home
#                   message: " - {{ trigger.entity_id }}"
#                   entity_id: '{{ trigger.entity_id }}'

#   - alias: system_location_home_mode
#     id: system_location_home_mode
#     trigger:
#       - platform: state
#         entity_id: sensor.people_home
#         to: '1'
#         id: 'non_vac'
#       - platform: state
#         entity_id: sensor.people_home
#         to: '0'
#         for:
#           hours: 24
#         id: 'vac'
#     action:
#       - choose:
#           - conditions:
#               - condition: trigger
#                 id: "non_vac"
#             sequence:
#               - variables:
#                   txt: >- 
#                     {% if states('sensor.people_home')|int(0) > 0 %}
#                     Home
#                     {% elif states('sensor.people_home')|int(0) == 0 %}
#                     Away
#                     {% endif %}
#               - service: input_select.select_option
#                 entity_id: input_select.home_mode
#                 data:
#                   option: "{{ txt }}"

#           - conditions:
#               - condition: trigger
#                 id: "vac"
#             sequence:
#               - service: input_select.select_option
#                 entity_id: input_select.home_mode
#                 data:
#                   option: Vacation


# # #  ##################################
# # #  System - Sandra Location changing
# # #  ##################################
# #   - alias: system_location_sandra
# #     id: system_location_sandra
# #     initial_state: true
# #     trigger:
# #       platform: state
# #       entity_id: person.sandra
# #     condition:      
# #       - condition: template
# #         value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
# #     action:
# #       service: notify.telegram
# #       data:
# #         message: "\U0001f30d Sandra: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
  
# # #  ##################################
# # #  System - Vova Location changing
# # #  ##################################
# #   - alias: system_location_vova
# #     id: system_location_vova
# #     initial_state: true
# #     trigger:
# #       platform: state
# #       entity_id: person.vova
# #     condition:      
# #       - condition: template
# #         value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
# #     action:
# #       service: notify.telegram
# #       data:
# #         message: "\U0001f30d Vova: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
  
#   # ##################################
#   # System - Sasha Location changing
#   # ##################################
#   #- alias: location_sasha
#   #  initial_state: false
#   #  trigger:
#   #    platform: state
#   #    entity_id: person.sasha
#   #  action:
#   #    service: notify.telegram_errors
#   #    data:
#   #      message: 'Sasha: {{ now().strftime("%d.%m.%Y-%H%M%S") }} from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}'


