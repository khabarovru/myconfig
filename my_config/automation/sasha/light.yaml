# # #####################################################################################
# #
# # SASHA - Lights
# #
# # #####################################################################################
# # Sasha Table Lamp (Philips E27)
# # ##################################
#   - alias: sasha_led_white_control
#     id: sasha_led_white_control
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       # - platform: event
#       #   event_type: xiaomi_aqara.click
#       #   event_data:
#       #     entity_id: sensor.0x158d0001f3627d_action
#       - platform: event
#         event_type: xiaomi_aqara.click
#         event_data:
#           entity_id: sensor.0x04cf8cdf3c77d831_action
#     condition:
#       - condition: template
#         value_template: "{{ states('light.led_white_s') in ['on','off'] }}"
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     action:
#       - choose:
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.click_type == 'single'  or trigger.event.data.click_type == 'button_1_single'}}"
#             sequence:
#               - service: light.toggle
#                 entity_id: light.led_white_s
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.click_type == 'double' or trigger.event.data.click_type == 'button_1_double' }}"
#             sequence:
#               - service: light.turn_on
#                 entity_id: light.led_white_s
#                 data:
#                   brightness: 255
#                   kelvin: 5000
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.click_type == 'hold' or trigger.event.data.click_type == 'button_1_hold' }}"
#             sequence:
#               - service: light.turn_on
#                 entity_id: light.led_white_s
#                 data:
#                   brightness: 14
#                   kelvin: 3000
  
# # ##################################
# # Sasha - Main Lamp (Xiaomi Round LED)
# # ##################################
#   - alias: sasha_main_lamp_left_button
#     id: sasha_main_lamp_left_button
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       - platform: event
#         event_type: xiaomi_aqara.click
#         event_data:
#           entity_id: sensor.0x00158d00026eb820_action
#           click_type: button_1_single
#     condition:
#       - condition: template
#         value_template: "{{ states('light.square_led_s') in ['on','off'] }}"
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     action:
#       - if:
#           - condition: state
#             entity_id: binary_sensor.square_led_s_nightlight
#             state: 'on'
#           - condition: state
#             entity_id: light.square_led_s
#             state: 'off'
#         then:
#           - service: yeelight.set_mode
#             data:
#               entity_id: light.square_led_s
#               mode: normal  
#       - choose:
#           - conditions:
#               - condition: state
#                 entity_id: light.square_led_s
#                 state: 'on'
#             sequence:
#               - service: light.turn_off
#                 entity_id: light.square_led_s
#           - conditions:
#               - condition: state
#                 entity_id: light.square_led_s
#                 state: 'off'
#             sequence:
#               - service: light.turn_on
#                 entity_id: light.square_led_s
#                 data:
#                   brightness: 230
#                   kelvin: 5000
  
# # ##################################
# # Sasha - Main Lamp (Xiaomi Round LED)
# # ##################################
#   - alias: sasha_main_lamp_right_button
#     id: sasha_main_lamp_right_button
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       - platform: event
#         event_type: xiaomi_aqara.click
#         event_data:
#           entity_id: sensor.0x00158d00026eb820_action
#           click_type: button_2_single
#     condition:
#       - condition: template
#         value_template: "{{ states('light.square_led_s') in ['on','off'] }}"
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     action:
#       - if:
#           - condition: state
#             entity_id: binary_sensor.square_led_s_nightlight
#             state: 'on'
#           - condition: state
#             entity_id: light.square_led_s
#             state: 'off'
#         then:
#           - service: yeelight.set_mode
#             data:
#               entity_id: light.square_led_s
#               mode: normal  
#       - choose:
#           - conditions:
#               - condition: state
#                 entity_id: light.square_led_s
#                 state: 'on'
#             sequence:
#               - service: light.turn_off
#                 entity_id: light.square_led_s
#           - conditions:
#               - condition: state
#                 entity_id: light.square_led_s
#                 state: 'off'
#             sequence:
#               - service: light.turn_on
#                 entity_id: light.square_led_s
#                 data:
#                   brightness: 14
#                   kelvin: 3000
  
# # ##################################
# # Sasha - Table Lamp Off (scene4) when main turned on
# # ################################## 
#   - alias: sasha_table_lamp_off_night_mode_main_on
#     id: sasha_table_lamp_off_night_mode_main_on
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: light.led_white_s
#         to:
#       - platform: homeassistant
#         event: start
#       - platform: event
#         event_type: automation_reloaded
#     condition:
#       - condition: template
#         value_template: "{{state_attr('light.led_white_s','brightness')|int(0) < 10}}"
#       - condition: state
#         entity_id: light.square_led_s
#         state: 'on'
#       - condition: state
#         entity_id: light.led_white_s
#         state: 'on'
#       - condition: state
#         entity_id: binary_sensor.tod_day
#         state: 'on'
#     action:
#       - service: light.turn_off
#         entity_id: light.led_white_s
  
#   # ##################################
#   # Sasha - Auto Night Light
#   # ##################################
#   # - alias: sasha_auto_nightlight_on
#   #   initial_state: false
#   #   trigger:
#   #     - platform: state
#   #       entity_id: binary_sensor.0x00158d000224f89f_motion, binary_sensor.0x00158d000224f89f_motion
#   #       #from: 'off'
#   #       to: 'on'
#   #   condition:
#   #     condition: and
#   #     conditions:
#   #       - condition: state
#   #         entity_id: binary_sensor.tod_day
#   #         state: 'off'
#   #       - condition: state
#   #         entity_id: person.sasha
#   #         state: 'home'
#   #   action:
#   #     - service: light.turn_on
#   #       entity_id: light.led_white_s
#   #       data:
#   #         brightness: 14
#   #         kelvin: 3000      
  
# # ##################################
# # Sasha - Auto Night Light Off 30m without movements
# # ##################################
#   - alias: sasha_night_auto_off_30m
#     id: sasha_night_auto_off_30m
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.motion_s
#         from: 'on'
#         to: 'off'
#         for:
#           minutes: 30
#     condition:
#       - condition: state
#         entity_id: binary_sensor.tod_day
#         state: 'off'
#     action:
#       - service: light.turn_off
#         entity_id: light.led_white_s
#         data:
#           transition: 5
  
# # ##################################
# # Sasha - Square LED Reset 
# # ##################################
#   - alias: sasha_square_led_restart
#     id: sasha_square_led_restart
#     initial_state: true
#     trigger:
#       - platform: time_pattern
#         minutes: "/1"
#       # - platform: state
#       #   entity_id: light.square_led_s
#       #   to: 'unavailable'
#       #   for:
#       #     minutes: 2
#       # - platform: numeric_state
#       #   entity_id: sensor.ha_uptime
#       #   above: 0
#       #   below: 2
#     condition:
#       - condition: state
#         entity_id: light.square_led_s
#         state: 'unavailable'
#         for:
#           minutes: 2
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#       - condition: state
#         entity_id: switch.system_square_led_s_restart_key
#         state: 'on'
#       - condition: template
#         value_template: >
#           {% set ignore = ['unknown', 'unavailable', 'none'] %}
#           {{ states('switch.shelly_1_led_s') not in ignore }}
#     action:
#       - repeat:
#           while:
#             - condition: state
#               entity_id: light.square_led_s
#               state: "unavailable"
#             - condition: template
#               value_template: "{{ repeat.index <= 5 }}"
#           sequence:
#             - service: switch.turn_off
#               entity_id: switch.shelly_1_led_s
#             - delay:
#                 seconds: 15
#             - service: switch.turn_on
#               entity_id: switch.shelly_1_led_s
#             - service: notify.telegram
#               data:
#                 message: "\U0001f6a8 Square LED S restart done({{repeat.index}})!"
#             - delay:
#                 seconds: 30
#       - condition: state
#         entity_id: light.square_led_s
#         state: 'unavailable'
#       - service: notify.telegram
#         data:
#           message: "\U0001f6a8 Square LED S restart unsuccessful!"
#       - service: switch.turn_off
#         entity_id: switch.system_square_led_s_restart_key
  
# # ##################################
# # Sasha - Square LED Auto Restart Key Toggle
# # ##################################
#   - alias: sasha_square_led_restart_key_toggle
#     id: sasha_square_led_restart_key_toggle
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       - platform: state
#         entity_id: light.square_led_s
#         from: 'unavailable'
#     action:
#       - service: switch.turn_on
#         entity_id: switch.system_square_led_s_restart_key
  
# # ##################################
# # Sasha - Turn Lamp Switch On if Off
# # ##################################
#   - alias: sasha_main_lamp_switch_on_if_off
#     id: sasha_main_lamp_switch_on_if_off
#     initial_state: true
#     trigger:
#       - platform: event
#         event_type: xiaomi_aqara.click
#         event_data:
#           entity_id: sensor.0x00158d00026eb820_action
#     condition:
#       - condition: state
#         entity_id: switch.shelly_1_led_s
#         state: 'off'
#     action:
#       - service: switch.turn_on
#         entity_id: switch.shelly_1_led_s
  
# # ##################################
# # Sasha - Timer restart with movement
# # ################################## 
#   - alias: sasha_timer_restart
#     id: sasha_timer_restart
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       - platform: event
#         event_type: xiaomi_aqara.motion
#         event_data:
#           entity_id: binary_sensor.0x00158d000224f89f_motion
#       - platform: event
#         event_type: xiaomi_aqara.motion
#         event_data:
#           entity_id: binary_sensor.0x00158d0003140824_motion
#     condition:
#       - condition: state
#         entity_id: light.square_led_s
#         state: 'on'
#       - condition: template
#         value_template: "{{(as_timestamp(now())-as_timestamp(state_attr('automation.sasha_timer_restart', 'last_triggered'))|int(0)) > 15 }}"
#       - condition: state
#         entity_id: switch.system_security_mode
#         state: 'off'
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     action:
#       - service: timer.cancel
#         entity_id: timer.main_light_s
#       - service: timer.start
#         entity_id: timer.main_light_s
  
# # ##################################
# # Sasha - Timer off
# # ################################## 
#   - alias: sasha_timer_off
#     id: sasha_timer_off
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: light.square_led_s
#         to: 'off'
#         from: 'on'
#     action:
#       - service: timer.cancel
#         entity_id: timer.main_light_s
  
# # ##################################
# # Sasha - Timer start on light on
# # ################################## 
#   - alias: sasha_timer_on
#     id: sasha_timer_on
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: light.square_led_s
#         to: 'on'
#         from: 'off'
#     condition:
#       - condition: state
#         entity_id: switch.system_security_mode
#         state: 'off'  
#     action:
#       - service: timer.cancel
#         entity_id: timer.main_light_s
#       - service: timer.start
#         entity_id: timer.main_light_s
  
# # ##################################
# # Sasha - Auto Light Off
# # ##################################
#   - alias: sasha_auto_light_off
#     id: sasha_auto_light_off
#     initial_state: true
#     trigger:
#       - platform: event
#         event_type: timer.finished
#         event_data:
#           entity_id: timer.main_light_s
#     condition:
#       - condition: state
#         entity_id: binary_sensor.tod_day
#         state: 'on'
#     action:
#       - service: light.turn_off
#         entity_id: light.square_led_s
#         data:
#           transition: 5
  
# # ##################################
# # Sasha - LED Strip Control with round key
# # ##################################
#   - alias: sasha_led_strip_control
#     id: sasha_led_strip_control
#     initial_state: true
#     trigger:
#       # - platform: event
#       #   event_type: xiaomi_aqara.click
#       #   event_data:
#       #     entity_id: sensor.0x158d00019c8afd_action
#       - platform: event
#         event_type: xiaomi_aqara.click
#         event_data:
#           entity_id: sensor.0x04cf8cdf3c77d831_action
#     condition:
#       - condition: template
#         value_template: "{{ states('light.esp32_node_s_led') in ['on','off'] }}"
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}" 
#     action:
#       - choose:
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.click_type == 'single' or trigger.event.data.click_type == 'button_2_single' }}"
#             sequence:
#               - service: light.turn_on
#                 data:
#                   entity_id: light.esp32_node_s_led
#                   effect: '{{ (["Random", "Rainbow", "Color Wipe", "Scan", "Twinkle", "Random Twinkle"] | random) }}'
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.click_type == 'double' or trigger.event.data.click_type == 'button_2_double' }}"
#             sequence:
#               - service: light.turn_on
#                 data:
#                   entity_id: light.esp32_node_s_led
#                   effect: 'Color Wipe'
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.click_type == 'hold' or trigger.event.data.click_type == 'button_2_hold' }}"
#             sequence:
#               - service: light.turn_off
#                 entity_id: light.esp32_node_s_led
#                 data:
#                   transition: 5
  
# # ##################################
# # Sasha - Main Light off with no occupancy for 1 hour
# # ##################################
#   - alias: sasha_main_light_off_with_occupancy
#     id: sasha_main_light_off_with_occupancy
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.occupancy_s
#         to: 'off'
#         for: 
#           hours: 1
#     condition:
#       - condition: state
#         entity_id: group.lights_s
#         state: 'on'
#     action:
#       - service: light.turn_off
#         entity_id: light.square_led_s, light.esp32_node_s_led, light.led_white_s
#         data:
#           transition: 15

# # ##################################
# # Sasha - Main Light Control with Alice
# # ##################################
#   - alias: sasha_main_light_control_with_alice
#     id: sasha_main_light_control_with_alice
#     initial_state: true
#     trigger:
#       - platform: event
#         event_type: yandex_intent
#         event_data:
#           text: Выключи свет в Сашиной комнате
#         id: 'to_off_alice'
#       - platform: event
#         event_type: yandex_intent
#         event_data:
#           text: Включи свет в Сашиной комнате
#         id: 'to_on_alice'
#     condition:
#       - condition: template
#         value_template: "{{ states('light.square_led_s') in ['on','off'] }}"
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     action:
#       - choose:
#           - conditions:
#               - condition: trigger
#                 id: 'to_off_alice'
#             sequence:
#               - service: light.turn_off
#                 entity_id: light.square_led_s
#           - conditions:
#               - condition: trigger
#                 id: 'to_on_alice'
#             sequence:
#               - service: light.turn_on
#                 entity_id: light.square_led_s
#                 data:
#                   brightness: 230
#                   kelvin: 5000
                  
# # ##################################
# # Sasha - Light Bar Restart
# # ##################################
#   - alias: sasha_light_bar_restart
#     id: sasha_light_bar_restart
#     initial_state: true
#     trigger:
#       - platform: time_pattern
#         minutes: "/1"
#       # - platform: state
#       #   entity_id: light.bedside_mb
#       #   to: 'unavailable'
#       #   for:
#       #     minutes: 2
#       # - platform: numeric_state
#       #   entity_id: sensor.ha_uptime
#       #   above: 0
#       #   below: 2
#     condition:
#       - condition: state
#         entity_id: light.light_bar_s
#         state: 'unavailable'
#         for:
#           minutes: 2
#       - condition: state
#         entity_id: switch.system_light_bar_s_restart_key
#         state: 'on'
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#       - condition: template
#         value_template: >
#           {% set ignore = ['unknown', 'unavailable', 'none'] %}
#           {{ states('switch.sp111_socket_1_relay') not in ignore }}
#     action:
#       - repeat:
#           while:
#             - condition: state
#               entity_id: light.light_bar_s
#               state: "unavailable"
#             - condition: template
#               value_template: "{{ repeat.index <= 5 }}"
#           sequence:
#             - service: switch.turn_off
#               entity_id: switch.sp111_socket_1_relay
#             - delay:
#                 seconds: 15
#             - service: switch.turn_on
#               entity_id: switch.sp111_socket_1_relay
#             - service: notify.telegram
#               data:
#                 message: "\U0001f6a8 Light Bar S restart done({{repeat.index}})!"
#             - delay:
#                 seconds: 30
#       - condition: state
#         entity_id: light.light_bar_s
#         state: 'unavailable'
#       - service: notify.telegram
#         data:
#           message: "\U0001f6a8 Light Bar S restart unsuccessful!"
#       - service: switch.turn_off
#         entity_id: switch.system_light_bar_s_restart_key

# # ##################################
# # Sasha - Light Bar S Auto Restart Key Toggle
# # ##################################
#   - alias: sasha_light_bar_s_restart_key_toggle
#     id: sasha_light_bar_s_restart_key_toggle
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     trigger:
#       - platform: state
#         entity_id: light.light_bar_s
#         from: 'unavailable'
#     action:
#       - service: switch.turn_on
#         entity_id: switch.system_light_bar_s_restart_key

# # ##################################
# # Sasha - Night Light Turn Off
# # ##################################
#   - alias: sasha_main_night_light_turn_off
#     id: sasha_main_night_light_turn_off
#     initial_state: true
#     trigger:
#       - platform: time
#         at: '23:00:03'
#     condition:
#       - condition: template
#         value_template: "{{ states('switch.micro_usb_2_relay_usb') in ['on','off'] }}"
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     action:
#       - service: switch.turn_off
#         entity_id: switch.micro_usb_2_relay_usb