# # #####################################################################################
# #
# # TOILET - Fan
# #
# # #####################################################################################
# # Toilet Fan - On 10m
# # ##################################
# - alias: toilet_fan_on
#   id: toilet_fan_on
#   initial_state: true
#   trigger:
#     - platform: event
#       event_type: xiaomi_aqara.click
#       event_data:
#         entity_id: sensor.0x00158d0001b97111_action
#         click_type: single
#     # - platform: state
#     #   entity_id: binary_sensor.0x00158d000232ddd6_contact
#     #   to: 'on'
#     #   for:
#     #     minutes: 2
#   condition:
#     - condition: state
#       entity_id: group.lights_t
#       state: "on"
#     - condition: state
#       entity_id: fan.esp32_node_b_fan_t
#       state: "off"
#     - condition: state
#       entity_id: switch.bathroom_light_l2_manual_mode
#       state: "off"
#   action:
#     - service: fan.turn_off
#       entity_id: fan.bathroom_light_l2
#     - service: fan.turn_on
#       entity_id: fan.esp32_node_b_fan_t

# # ##################################
# # Toilet Fan - Off
# # ##################################
# - alias: toilet_fan_off
#   id: toilet_fan_off
#   initial_state: true
#   trigger:
#     - platform: event
#       event_type: xiaomi_aqara.click
#       event_data:
#         entity_id: sensor.0x00158d0001b97111_action
#         click_type: single
#     - platform: event
#       event_type: timer.finished
#       event_data:
#         entity_id: timer.fan_t
#     - platform: event
#       event_type: timer.finished
#       event_data:
#         entity_id: timer.short_fan_t
#   condition:
#     - condition: state
#       entity_id: fan.esp32_node_b_fan_t
#       state: "on"
#   action:
#     - service: fan.turn_off
#       entity_id: fan.esp32_node_b_fan_t
#     - service: timer.cancel
#       entity_id: timer.fan_t

# # ##################################
# # Toilet - Fan Timer start on
# # ##################################
# - alias: toilet_fan_timer_on
#   id: toilet_fan_timer_on
#   initial_state: true
#   trigger:
#     - platform: state
#       entity_id: fan.esp32_node_b_fan_t
#       to: "on"
#   action:
#     - service: timer.cancel
#       entity_id: timer.fan_t
#     - service: timer.start
#       entity_id: timer.fan_t
#     # - condition: state
#     #   entity_id: binary_sensor.wasp_t
#     #   state: 'on'
#     # - service: timer.pause
#     #   entity_id: timer.fan_t

# # # ##################################
# # # Toilet - Fan Timer pause
# # # ##################################
# #   - alias: toilet_fan_timer_pause
# #     id: toilet_fan_timer_pause
# #     initial_state: true
# #     trigger:
# #       - platform: state
# #         entity_id: binary_sensor.wasp_t
# #         to: 'on'
# #       - platform: event
# #         event_type: xiaomi_aqara.motion
# #         event_data:
# #           entity_id: binary_sensor.0x00158d0001e54280_motion
# #     condition:
# #       - condition: state
# #         entity_id: timer.fan_t
# #         state: 'active'
# #       - condition: state
# #         entity_id: binary_sensor.0x00158d000232ddd6_contact
# #         state: 'on'
# #       - condition: template
# #         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
# #     action:
# #       - service: timer.pause
# #         entity_id: timer.fan_t

# # ##################################
# # Toilet - Fan Timer restart
# # ##################################
# - alias: toilet_fan_timer_restart
#   id: toilet_fan_timer_restart
#   initial_state: true
#   trigger:
#     - platform: event
#       event_type: xiaomi_aqara.motion
#       event_data:
#         entity_id: binary_sensor.0x00158d0001e54280_motion
#   condition:
#     - condition: state
#       entity_id: binary_sensor.0x00158d000232ddd6_contact
#       state: "on"
#     - condition: state
#       entity_id: fan.esp32_node_b_fan_t
#       state: "on"
#     - condition: template
#       value_template: "{{(as_timestamp(now()) - as_timestamp(state_attr('automation.toilet_fan_timer_restart', 'last_triggered'))|int(0)) > 10 }}"
#   action:
#     - service: timer.cancel
#       entity_id: timer.fan_t
#     - service: timer.start
#       entity_id: timer.fan_t

# # ##################################
# # Toilet - Fan Autostart
# # ##################################
# - alias: toilet_fan_auto
#   id: toilet_fan_auto
#   initial_state: true
#   trigger:
#     - platform: time_pattern
#       minutes: "/30"
#   condition:
#     - condition: state
#       entity_id: input_boolean.auto_fan_t
#       state: "on"
#     - condition: state
#       entity_id: switch.bathroom_light_l2_manual_mode
#       state: "off"
#     - condition: state
#       entity_id: fan.esp32_node_b_fan_t
#       state: "off"
#     - condition: state
#       entity_id: timer.fan_b
#       state: "idle"
#     - condition: template
#       value_template: "{{(as_timestamp(now())|int(0) - as_timestamp(states.fan.esp32_node_b_fan_t.last_changed)|int(0) ) > 20*60 }}"
#     - condition: template
#       value_template: "{{not (6>=now().hour|int(0) >=0 or is_state('input_boolean.system_security_mode','on') or (is_state('binary_sensor.0x00158d0001ef2ffc_contact','on') and (as_timestamp(now())-as_timestamp(states.binary_sensor['0x00158d0001ef2ffc_contact'].last_changed) > 10*60)))}}"
#   action:
#     - service: fan.turn_off
#       entity_id: fan.bathroom_light_l2
#     - service: fan.turn_on
#       entity_id: fan.esp32_node_b_fan_t
