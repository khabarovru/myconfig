  # - trigger:
  #     - platform: state
  #       entity_id: media_player.yandex_k
  #       attribute: assumed_state
  #     - platform: homeassistant
  #       event: start
  #     - platform: event
  #       event_type: automation_reloaded
  #     - platform: event
  #       event_type: event_template_reloaded
  #   binary_sensor:
  #     - name: Yandex K
  #       unique_id: yandex_k
  #       icon: mdi:cloud-alert
  #       availability: "{{ not is_state('media_player.yandex_k', 'unavailable') }}"
  #       state: "{{ is_state_attr('media_player.yandex_k', 'assumed_state', true) }}"
  #       delay_on:
  #         seconds: 5
  #       delay_off:
  #         seconds: 5

  # - trigger:
  #     - platform: state
  #       entity_id: media_player.yandex_s
  #       attribute: assumed_state
  #     - platform: homeassistant
  #       event: start
  #     - platform: event
  #       event_type: automation_reloaded
  #     - platform: event
  #       event_type: event_template_reloaded
  #   binary_sensor:
  #     - name: Yandex S
  #       unique_id: yandex_S
  #       icon: mdi:cloud-alert
  #       availability: "{{ not is_state('media_player.yandex_s', 'unavailable') }}"
  #       state: "{{ is_state_attr('media_player.yandex_s', 'assumed_state', true) }}"
  #       delay_on:
  #         seconds: 5
  #       delay_off:
  #         seconds: 5

  # - trigger:
  #     - platform: state
  #       entity_id: media_player.yandex_v
  #       attribute: assumed_state
  #     - platform: homeassistant
  #       event: start
  #     - platform: event
  #       event_type: automation_reloaded
  #     - platform: event
  #       event_type: event_template_reloaded
  #   binary_sensor:
  #     - name: Yandex V
  #       unique_id: yandex_v
  #       icon: mdi:cloud-alert
  #       availability: "{{ not is_state('media_player.yandex_v', 'unavailable') }}"
  #       state: "{{ is_state_attr('media_player.yandex_v', 'assumed_state', true) }}"
  #       delay_on:
  #         seconds: 5
  #       delay_off:
  #         seconds: 5
          
  # - trigger:
  #     - platform: state
  #       entity_id: media_player.yandex_hb
  #       attribute: assumed_state
  #     - platform: homeassistant
  #       event: start
  #     - platform: event
  #       event_type: automation_reloaded
  #     - platform: event
  #       event_type: event_template_reloaded
  #   binary_sensor:
  #     - name: Yandex HB
  #       unique_id: yandex_hb
  #       icon: mdi:cloud-alert
  #       availability: "{{ not is_state('media_player.yandex_hb', 'unavailable') }}"
  #       state: "{{ is_state_attr('media_player.yandex_hb', 'assumed_state', true) }}"
  #       delay_on:
  #         seconds: 5
  #       delay_off:
  #         seconds: 5
          
  # - trigger:
  #     - platform: state
  #       entity_id: media_player.yandex_mb
  #       attribute: assumed_state
  #     - platform: homeassistant
  #       event: start
  #     - platform: event
  #       event_type: automation_reloaded
  #     - platform: event
  #       event_type: event_template_reloaded
  #   binary_sensor:
  #     - name: Yandex MB
  #       unique_id: yandex_mb
  #       icon: mdi:cloud-alert
  #       availability: "{{ not is_state('media_player.yandex_mb', 'unavailable') }}"
  #       state: "{{ is_state_attr('media_player.yandex_mb', 'assumed_state', true) }}"
  #       delay_on:
  #         seconds: 5
  #       delay_off:
  #         seconds: 5