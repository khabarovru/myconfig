  # - trigger:
  #     - platform: time_pattern
  #       seconds: "/30"
  #     - platform: homeassistant
  #       event: start
  #     - platform: event
  #       event_type: automation_reloaded
  #     - platform: event
  #       event_type: event_template_reloaded
  #   sensor:
  #     - name: HA Uptime
  #       unique_id: ha_uptime
  #       icon: mdi:clock
  #       state: "{{ ((as_timestamp(now())|int(0)-as_timestamp(states('sensor.ha_start'))|int(0)) / 60 )|int(0) }}"
  #       unit_of_measurement: minutes

  #     - name: Host Uptime
  #       unique_id: host_uptime
  #       icon: mdi:clock
  #       unit_of_measurement: minutes
  #       state: "{{ ( ( as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) ) / (60) ) | int(0) }}"

  #     - name: MQTT Broker Uptime Text
  #       unique_id: mqtt_brocker_uptime_text
  #       icon: mdi:av-timer
  #       state: >-
  #         {%- set test = states('sensor.mqtt_broker_uptime')|int(0) -%}
  #         {% set minutes = ((test % 3600) / 60) | int(0) %}
  #         {% set hours = ((test % 86400) / 3600) | int(0) %}
  #         {% set days = (test / 86400) | int(0) %}
  #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 or days >0%}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{ minutes}}m{%else%}<1m{%endif%}
  #       attributes:
  #         days: "{{ (states('sensor.mqtt_broker_uptime')|int(0) / 86400) | int(0) }}"
  #         hours: "{{ ((states('sensor.mqtt_broker_uptime')|int(0) % 86400) / 3600) | int(0) }}"
  #         minutes: "{{ ((states('sensor.mqtt_broker_uptime')|int(0) % 3600) / 60) | int(0) }}"
  #         raw: "{{ states('sensor.mqtt_broker_uptime')|int(0) }}"

  #     - name: HA Uptime Text
  #       unique_id: ha_uptime_text
  #       icon: mdi:clock
  #       state: >-
  #         {%- set test = states('sensor.ha_uptime')|int(0) -%}
  #         {%- set minutes = (test % 60) | int(0) %} 
  #         {%- set hours = ((test % 1440) /60) | int(0) %}
  #         {%- set days = (test / 1440)|int(0) -%}
  #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 or days >0%}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{minutes}}m{%else%}0m{%endif%}
  #       attributes:
  #         days: "{{( states('sensor.ha_uptime')|int(0) / 1440)|int(0) }}"
  #         hours: "{{ ((states('sensor.ha_uptime')|int(0) % 1440) /60) | int(0) }}"
  #         minutes: "{{ (states('sensor.ha_uptime')|int(0) % 60) | int(0) }}"
  #         raw: "{{ states('sensor.ha_uptime')|int(0) }}"
        
  #     - name: Host Uptime Text
  #       unique_id: host_uptime_text
  #       icon: mdi:clock-outline
  #       state: >-
  #         {%- set test = states('sensor.host_uptime')|int(0) -%}
  #         {%- set minutes = (test % 60) | int(0) %} 
  #         {%- set hours = ((test % 1440) /60) | int(0) %}
  #         {%- set days = (test / 1440)|int(0) -%}
  #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 or days >0%}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{ minutes}}m{%else%}0m{%endif%}
  #       attributes:
  #         days: "{{ (states('sensor.host_uptime')|int(0) / 1440)|int(0) }}"
  #         hours: "{{ ((states('sensor.host_uptime')|int(0) % 1440) /60) | int(0) }}"
  #         minutes: "{{ (states('sensor.host_uptime')|int(0) % 60) | int(0) }}"
  #         raw: "{{ states('sensor.host_uptime')|int(0) }}"

  #     - name: pmox01 Uptime Text
  #       unique_id: pmox01_uptime_text
  #       icon: mdi:clock-digital
  #       state: >-
  #         {%- set test = states('sensor.pmox01_uptime')|int(0) -%}
  #         {%- set minutes = (test % 60) | int(0) %} 
  #         {%- set hours = ((test % 1440) /60) | int(0) %}
  #         {%- set days = (test / 1440)|int(0) -%}
  #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 or days >0%}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{ minutes}}m{%else%}0m{%endif%}
  #       attributes:
  #         days: "{{ (states('sensor.pmox01_uptime')|int(0) / 1440)|int(0) }}"
  #         hours: "{{ ((states('sensor.pmox01_uptime')|int(0) % 1440) /60) | int(0) }}"
  #         minutes: "{{ (states('sensor.pmox01_uptime')|int(0) % 60) | int(0) }}"
  #         raw: "{{ states('sensor.pmox01_uptime')|int(0) }}"

  #     - name: pmox02 Uptime Text
  #       unique_id: pmox02_uptime_text
  #       icon: mdi:clock-digital
  #       state: >-
  #         {%- set test = states('sensor.pmox02_uptime')|int(0) -%}
  #         {%- set minutes = (test % 60) | int(0) %} 
  #         {%- set hours = ((test % 1440) /60) | int(0) %}
  #         {%- set days = (test / 1440)|int(0) -%}
  #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 or days >0%}{{hours}}h {% endif %}{%if minutes > 0  or test >60 %}{{ minutes}}m{%else%}0m{%endif%}
  #       attributes:
  #         days: "{{ (states('sensor.pmox02_uptime')|int(0) / 1440)|int(0) }}"
  #         hours: "{{ ((states('sensor.pmox02_uptime')|int(0) % 1440) /60) | int(0) }}"
  #         minutes: "{{ (states('sensor.pmox02_uptime')|int(0) % 60) | int(0) }}"
  #         raw: "{{ states('sensor.pmox02_uptime')|int(0) }}"

  # # ############################################################################
  # # Zigbee2mqtt Uptime sensor
  # # ############################################################################
  #   #     - name: Zigbee2mqtt Bridge Uptime Text
  #   #       icon: mdi:av-timer
  #   #       state: >
  #   #         {%- set test = (states('sensor.zigbee2mqtt_bridge_uptime')|int(0)) -%}
  #   #         {% set minutes = ((test % 3600) / 60) | int(0) %}
  #   #         {% set hours = ((test % 86400) / 3600) | int(0) %}
  #   #         {% set days = (test / 86400) | int(0) %}
  #   #         {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 or days >0 %}{{hours}}h {% endif %}{%if minutes >0  or test >60 %}{{ minutes}}m{%else%}<1m{%endif%}
  #   #       attributes:
  #   #         days: "{{ (states('sensor.zigbee2mqtt_bridge_uptime')|int(0) / 86400) | int(0) }}"
  #   #         hours: "{{ ((states('sensor.zigbee2mqtt_bridge_uptime')|int(0) % 86400) / 3600) | int(0) }}"
  #   #         minutes: "{{ ((states('sensor.zigbee2mqtt_bridge_uptime')|int(0) % 3600) / 60) | int(0) }}"
  #   #         raw: "{{ states('sensor.zigbee2mqtt_bridge_uptime')|int(0) }}"