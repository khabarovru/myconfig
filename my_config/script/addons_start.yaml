  # addons_start:
  #   alias: Force Addons (Re)Start
  #   sequence:
  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_appdaemon

  #     - service: hassio.addon_restart
  #       data:
  #         addon: 5c53de3b_esphome

  #     - service: hassio.addon_restart
  #       data:
  #         addon: 77c0fc0d_mqtt-explorer

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_chrony

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_grafana

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_ide

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_logviewer

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_vscode

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_uptime-kuma

  #     - service: hassio.addon_restart
  #       data:
  #         addon: cebe7a76_hassio_google_drive_backup

  #     - service: hassio.addon_restart
  #       data:
  #         addon: core_configurator
          
  #     - service: hassio.addon_restart
  #       data:
  #         addon: core_mariadb

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a889bffc_go2rtc

  #     - service: hassio.addon_restart
  #       data:
  #         addon: core_rpc_shutdown

  #     - service: hassio.addon_restart
  #       data:
  #         addon: db21ed7f_portainer

  #     - service: hassio.addon_restart
  #       data:
  #         addon: a0d7b954_nginxproxymanager

  #     - service: notify.telegram
  #       data:
  #         message: "Addonds restart completed!"
          
  # go2rtc_restart:
  #   alias: Force go2rtc (Re)start
  #   sequence:
  #     - service: hassio.addon_restart
  #       data:
  #         addon: a889bffc_go2rtc