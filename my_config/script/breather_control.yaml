  # breather_v_turn_on:
  #   alias: Breather V Turn On
  #   mode: queued
  #   max: 10
  #   max_exceeded: silent
  #   sequence:
  #     - service: switch.turn_off
  #       entity_id: switch.0x00158d000344998e_plug
  #     - delay:
  #         seconds: 3
  #     - service: switch.turn_on
  #       entity_id: switch.0x00158d000344998e_plug
  #     - delay:
  #         seconds: 1
  #     - service: button.press
  #       entity_id: button.digma_ir_v_breather_pwr

  # breather_turn_on:
  #   alias: Breather Turn On
  #   mode: queued
  #   max: 10
  #   max_exceeded: silent
  #   fields:
  #     breather:
  #       description: 'Идентификатор бризера (V, S, MB)'
  #       example: 'V'
  #   sequence:
  #     # - service: notify.telegram
  #     #   data:
  #     #     message: "name {{breather}}, speed {{speed}}"
  #     - if:
  #         - condition: template
  #           value_template: "{{ breather == 'V' }}"
  #         - condition: state
  #           entity_id: binary_sensor.breather_v
  #           state: 'off'
  #       then:
  #         - service: switch.turn_off
  #           entity_id: switch.0x00158d000344998e_plug
  #         # - service: notify.telegram
  #         #   data:
  #         #     message: "plug off"
  #         - delay:
  #             seconds: 10
  #         - service: switch.turn_on
  #           entity_id: switch.0x00158d000344998e_plug
  #         # - service: notify.telegram
  #         #   data:
  #         #     message: "plug on"
  #         - delay:
  #             seconds: 10
  #         - service: button.press
  #           entity_id: button.digma_ir_v_breather_pwr
  #         # - service: notify.telegram
  #         #   data:
  #         #     message: "ir fire pwr on"
  #     - variables:
  #         breather_ent: "{{ 'binary_sensor.breather_' + (breather| lower) }}"
  #     - if:
  #         - condition: template
  #           value_template: "{{ is_state(breather_ent,'off') }}"
  #       then:
  #         - service: button.press
  #           data:
  #             entity_id: "{{ 'button.digma_ir_' + (breather| lower) + '_breather_pwr' }}"
  #     - service: fan.set_percentage
  #       data:
  #         entity_id: "{{ 'fan.breather_' + (breather | lower ) }}"
  #         percentage: "{{ state_attr('fan.breather_' + (breather | lower ),'percentage') }}"

  # breather_turn_off:
  #   alias: Breather Turn Off
  #   mode: queued
  #   max: 10
  #   max_exceeded: silent
  #   fields:
  #     breather:
  #       description: 'Идентификатор бризера (V, S, MB)'
  #       example: 'V'
  #   sequence:
  #     - variables:
  #         breather_ent: "{{ 'binary_sensor.breather_' + (breather| lower) }}"
  #     - if:
  #         - condition: template
  #           value_template: "{{ is_state(breather_ent,'on') }}"
  #       then:
  #         - service: button.press
  #           data:
  #             entity_id: "{{ 'button.digma_ir_' + (breather| lower) + '_breather_pwr' }}"

  # breather_speed_control:
  #   alias: Breather Speed Control
  #   mode: queued
  #   max: 10
  #   max_exceeded: silent
  #   fields:
  #     breather:
  #       description: 'Идентификатор бризера (V, S, MB)'
  #       example: 'V'
  #     speed:
  #       description: 'Скорость для установки (25,50,75,100)'
  #       example: '25'
  #   sequence:
  #     # - service: notify.telegram
  #     #   data:
  #     #     message: "name {{breather}}, speed {{speed}}"
  #     - delay:
  #         seconds: 5
  #     - choose:
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ speed|int(0) == 0 }}"
  #           sequence:
  #             - service: button.press
  #               data:
  #                 entity_id: "{{ 'button.digma_ir_' + (breather| lower) + '_breather_pwr' }}"
  #             # - service: notify.telegram
  #             #   data:
  #             #     message: "name {{breather}}, to off"

  #         - conditions:
  #             - condition: template
  #               value_template: "{{ speed|int(0) != 0 }}"
  #           sequence:
  #             - choose:
  #                 - conditions:
  #                     - condition: template
  #                       value_template: "{{ is_state('binary_sensor.breather_' + (breather| lower), 'off') }}"
  #                   sequence:
  #                     # - service: notify.telegram
  #                     #   data:
  #                     #     message: "{{breather}} power from script"
  #                     - service: button.press
  #                       data:
  #                         entity_id: "{{ 'button.digma_ir_' + (breather| lower) + '_breather_pwr' }}"
  #                     - delay:
  #                         seconds: 2
  #             - repeat:
  #                 count: 5
  #                 sequence:
  #                   - service: button.press
  #                     data:
  #                       entity_id: "{{ 'button.digma_ir_' + (breather| lower) + '_breather_down' }}"
  #                   - delay:
  #                       milliseconds: 500
  #             # - service: notify.telegram
  #             #   data:
  #             #     message: "speed set to {{speed}}"
  #             - repeat:
  #                 count: "{{ ((speed|int(0)) / 25) - 1}}"
  #                 sequence:
  #                   - service: button.press
  #                     data:
  #                       entity_id: "{{ 'button.digma_ir_' + (breather| lower) + '_breather_up' }}"
  #                   - delay:
  #                       milliseconds: 500
  #             - service: input_number.set_value
  #               data:
  #                 entity_id: "{{ 'input_number.breather_' + (breather| lower) + '_percentage' }}"
  #                 value: "{{speed}}"
