# # - platform: command_line
# #   name: Workday RAW
# #   command: >-
# #     curl https://isdayoff.ru/api/getdata?date1={{ now().date().strftime("%Y%m%d") }}&date2={{ (now().date() + timedelta(days=1)).strftime("%Y%m%d") }}
# #   scan_interval: 600


#   - sensor: 
#       name: ERRORS during Boot
#       command: 'grep -c -E "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}[.][0-9]{3} ERROR .*$" /config/home-assistant.log || true'
#       scan_interval: 6000
#       unit_of_measurement: ea
  
#   - sensor:
#       name: WARNINGS during Boot
#       command: 'grep -c -E "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}[.][0-9]{3} WARNING .*$" /config/home-assistant.log || true'
#       scan_interval: 6000
#       unit_of_measurement: ea
  
#   - sensor:
#       name: Start Time Cmd
#       unique_id: start_time_cmd
#       command: 'grep -m 1 -o "initialized[[:space:]]in[[:space:]][0-9]\+.[0-9]\+" home-assistant.log | grep -o "[0-9]\+.[0-9]\+$" || echo -1'
#       scan_interval: 6000
#       unit_of_measurement: "s"

# # - platform: command_line
# #   name: badlogin
# #   command: 'grep -v "Timeout" /config/home-assistant.log | grep -c "Login attempt" || true '
# #   value_template: '{{ value | int }}'
# #   unit_of_measurement: ea

#   - sensor:
#       name: Supervisor Updates
#       command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"update_available":.data.update_available,"healthy":.data.healthy,"addons":[.data.addons[] | select(.update_available)]}'''
#       value_template: "{{ value_json.addons | length }}"
#       unit_of_measurement: pending update(s)
#       json_attributes:
#         - update_available
#         - newest_version
#         - current_version
#         - healthy
#         - addons

# # - platform: command_line
# #   name: Updater HassOS
# #   command: 'curl http://supervisor/os/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"update_available":.data.update_available}'''
# #   value_template: "{% if value_json.update_available or value_json.newest_version != value_json.current_version %}on{% else %}off{% endif %}"
# #   json_attributes:
# #   - newest_version
# #   - current_version
# #   - update_available

# # - platform: command_line
# #   name: Updater Core
# #   command: 'curl http://supervisor/core/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version}'''
# #   scan_interval: 600
# #   value_template: "{% if value_json.newest_version != value_json.current_version %}on{% else %}off{% endif %}"
# #   json_attributes:
# #   - newest_version
# #   - current_version

#   - sensor:
#       name: ya_weather_home
#       command: 'bash /config/ya_weather_home.sh'
#       scan_interval: 120

# # - platform: command_line
# #   name: Dima Yandex Rain
# #   command: >
# #     wget -q --user-agent='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.80 Safari/537.36' "https://yandex.ru/pogoda/maps/nowcast?lat={{state_attr('device_tracker.life360_dima_tsymbal','latitude')}}&lon={{state_attr('device_tracker.life360_dima_tsymbal','longitude')}}" -O /dev/stdout | sed 's/>/>\n/g' | grep "weather-maps-fact__nowcast-alert" -A1 | tail -1 | sed 's/<\/div>//g' | sed 's|.*\. ||'
# #   scan_interval: 120
# #   value_template: >
# #     {% if value == "unknown" or value == "" -%}
# #       unavailable
# #     {%- else -%}
# #       {{value}}
# #     {%- endif %}

# # - platform: command_line
# #   name: Sandra Yandex Rain
# #   command: >
# #     wget -q --user-agent='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.80 Safari/537.36' "https://yandex.ru/pogoda/maps/nowcast?lat={{state_attr('device_tracker.life360_sandra_tsymbal','latitude')}}&lon={{state_attr('device_tracker.life360_sandra_tsymbal','longitude')}}" -O /dev/stdout | sed 's/>/>\n/g' | grep "weather-maps-fact__nowcast-alert" -A1 | tail -1 | sed 's/<\/div>//g' | sed 's|.*\. ||'
# #   scan_interval: 120
# #   value_template: >
# #     {% if value == "unknown" or value == "" -%}
# #       unavailable
# #     {%- else -%}
# #       {{value}}
# #     {%- endif %}

# # - platform: command_line
# #   name: Vova Yandex Rain
# #   command: >
# #     wget -q --user-agent='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.80 Safari/537.36' "https://yandex.ru/pogoda/maps/nowcast?lat={{state_attr('device_tracker.life360_vova_tsymbal','latitude')}}&lon={{state_attr('device_tracker.life360_vova_tsymbal','longitude')}}" -O /dev/stdout | sed 's/>/>\n/g' | grep "weather-maps-fact__nowcast-alert" -A1 | tail -1 | sed 's/<\/div>//g' | sed 's|.*\. ||'
# #   scan_interval: 120
# #   value_template: >
# #     {% if value == "unknown" or value == "" -%}
# #       unavailable
# #     {%- else -%}
# #       {{value}}
# #     {%- endif %}